version: 0.2

phases:
  install:
    commands:
      - echo Running as user `whoami`...
      - nohup dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - echo Preparing git...
      - mkdir ~/.ssh/
      - ssh-keyscan -t rsa git-codecommit.us-west-2.amazonaws.com >> ~/.ssh/known_hosts
      - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - git clone https://git-codecommit.us-west-2.amazonaws.com/v1/repos/ops-scripts /tmp/ops-scripts/
      - cp -R /tmp/ops-scripts/github/* ~/.ssh/
      - chmod 600 ~/.ssh/*
  build:
    commands:
      - echo Building application on `date`...
      - echo Building the Docker image...
      - git config --global --add url."git@github.com:".insteadof "https://github.com/"
      - npm i -g typescript
      - yarn
      - yarn build
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "[{\"name\":\"$IMAGE_REPO_NAME\",\"imageUri\":\"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME\"}]" > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
